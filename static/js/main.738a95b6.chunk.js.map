{"version":3,"sources":["components/button.js","components/model.js","components/input.js","containers/assessment/scalar.js","containers/assessment/likert.js","lib/common.js","containers/assessment/general.js","lib/utils.js","containers/assessment/maturityQuestion.js","containers/assessment/dimension.js","containers/assessment/instructions.js","data/index.js","containers/assessment/model.js","containers/assessment/stages.js","containers/assessment/chart.js","containers/assessment/report.js","lib/reducer.js","lib/thunks.js","containers/assessment/index.js","containers/introduction/index.js","containers/app/header.js","containers/app/index.js","index.js"],"names":["Button","props","className","onClick","block","button","concat","react_default","a","createElement","children","defaultProps","Chart","d","Magnify","viewBox","Gear","Fist","Bulb","Model","cl","bem","stages","name","icon","model_Chart","toString","x","y","model_Magnify","model_Gear","model_Fist","model_Bulb","gradients","dimensionGradients","id","stroke","strokeWidth","fill","map","gradient","index","x1","y1","x2","y2","key","offset","stopColor","Array","_","stage","$faded","highlight","toLowerCase","width","height","clipPath","stageWidth","alignmentBaseline","textAnchor","maturityScore","fillOpacity","Input","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","showMeta","input","$meta","textarea","description","onChange","e","update","target","value","placeholder","type","React","Component","Scalar","question","min","max","option","$selected","currentAnswer","answer","Likert","useGoToTop","arguments","length","undefined","useEffect","window","scrollTo","top","behavior","updateMetaAnswer","setState","localState","assign","meta","defineProperty","firstUnanswered","answers","keys","find","General","_ref","state","dispatch","_useState","useState","general","_useState2","slicedToArray","components_input","assessment_likert","assessment_scalar","allQuestions","allMeta","allAnswered","react_router_dom","to","components_button","payload","clean","text","replace","match","p1","dictionary","analytical data","analytics","data lake","IoT","KPI","analytical model","machine learning","analytical product","data literacy","data-driven","info","_arr","_loop","_i","re","RegExp","capitalize","charAt","toUpperCase","slice","MaturityQuestion","hoverIndex","_this2","options","$highlighted","$answered","onMouseEnter","enterAnswer","onMouseLeave","leaveAnswer","dangerouslySetInnerHTML","__html","dimensionNames","dimensions","nextDimension","dimensionKey","indexOf","next","questions","openQuestion","reduce","metaKeys","answerKeys","firstOpenQuestion","document","getElementById","classList","add","scrollIntoView","url","_len","_key","k","join","defaultState","withRouter","questionnaire","dimension","react_transition_group","in","appear","timeout","animationState","$entering","$entered","$exiting","$exited","short","questionKey","keyKnowledge","keyImportance","maturityQuestion","updateAnswer","Instructions","submitted","src_data","data","metrics","skills","technology","leadership","culture","strategy","agility","integration","empowerment","reporting","analyzing","optimizing","empowering","innovating","model","Stages","components_model","full","wrap","each","word","d3","words","split","reverse","line","lineNumber","attr","dy","parseFloat","tspan","append","pop","push","node","getComputedTextLength","scores","axis","HALF_PI","Math","PI","config","margin","left","right","bottom","circleOpacity","axisColor","axisOpacity","areaOpacity","levels","maxValue","labelFactor","wrapWidth","color","roundStrokes","i","o","allAxis","j","radius","angleSlice","rScale","range","domain","g","axisGrid","filter","feMerge","colors","selectAll","enter","style","cos","sin","radarLine","curve","angle","blobWrapper","on","transition","duration","dotRadius","permalink","URL","searchParams","set","href","includes","Report","global","entries","date","isReset","$submitted","score","relevantQuestions","q","questionValue","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","answerKey","err","return","toFixed","values","b","Fragment","confirm","reset","floor","assessment_chart","readingGuide","level","asIsStage","toBeStage","item","initialState","start","Date","version","moment","format","pushedURL","submitAssessment","_ref2","newMeta","end","newState","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","json","uploadAssessment","stateMachine","action","console","log","localStorage","removeItem","_ref4","submitAnswers","_ref5","navigate","_event","_ref3","submittedAssessment","assessment","retrieveAssessment","retrievedAssessment","init","savedState","parse","getItem","loadState","reducer","setItem","saveState","progress","location","pathname","Assessment","_useReducer","useReducer","_useReducer2","get","history","react_router","exact","path","render","assessment_instructions","assessment_general","assessment_stages","assessment_dimension","params","assessment_report","intro","introduction","content","header","App","app","app_header","component","Introduction","querySelector","containers_app"],"mappings":"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","file":"static/js/main.738a95b6.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/button.css'\n\nconst Button = props => {\n  const { className, onClick, block } = props\n  const button = `button ${block && 'block'} ${className}`\n  return (\n    <div className=\"button__container\">\n      <div onClick={onClick} className={button}>\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  block: PropTypes.bool,\n}\n\nButton.defaultProps = {\n  className: '',\n  onClick: () => {},\n  block: false,\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/model.css'\n\nconst Chart = props => {\n  return (\n    <g className={props.className}>\n      <path d=\"M96,336c0-26.5,21.484-48,48-48   c4.984,0,9.688,0.969,14.219,2.375l41.844-55.813C194.984,226.969,192,217.813,192,208c0-26.5,21.5-48,48-48s48,21.5,48,48   c0,5-0.969,9.688-2.391,14.219l55.797,41.844C349.031,259,358.156,256,368,256c2,0,3.875,0.344,5.812,0.594L429.5,145.25   c-8.312-8.625-13.5-20.313-13.5-33.25c0-26.5,21.5-48,48-48s48,21.5,48,48s-21.5,48-48,48c-2,0-3.875-0.344-5.812-0.594   L402.531,270.75C410.844,279.375,416,291.062,416,304c0,26.5-21.5,48-48,48s-48-21.5-48-48c0-4.969,0.969-9.688,2.375-14.219   l-55.797-41.844C258.969,253,249.828,256,240,256c-4.984,0-9.688-0.969-14.203-2.375l-41.859,55.781   C189.016,317.031,192,326.156,192,336c0,26.5-21.484,48-48,48S96,362.5,96,336z M448,112c0,8.844,7.156,16,16,16s16-7.156,16-16   s-7.156-16-16-16S448,103.156,448,112z M352,304c0,8.844,7.156,16,16,16s16-7.156,16-16s-7.156-16-16-16S352,295.156,352,304z    M224,208c0,8.844,7.156,16,16,16s16-7.156,16-16s-7.156-16-16-16S224,199.156,224,208z M128,336c0,8.844,7.156,16,16,16   s16-7.156,16-16s-7.156-16-16-16S128,327.156,128,336z\" />\n    </g>\n  )\n}\n\nconst Magnify = props => {\n  return (\n    <g className={props.className}>\n      <path\n        viewBox=\"0 0 184.615 184.615\"\n        d=\"M169.045,15.57C159.005,5.53,145.656,0,131.458,0C117.259,0,103.91,5.53,93.87,15.57\n      c-16.739,16.74-19.951,41.955-9.651,61.956c-2.983,3.414-2.811,9,0.078,14.182l-13.79,13.79l-3.076-3.076\n      c-1.328-1.328-3.48-1.328-4.808,0L3.636,161.409c-4.848,4.848-4.848,12.708,0,17.556l2.015,2.015c4.848,4.848,12.708,4.848,17.556,0\n      l58.988-58.988c1.328-1.328,1.328-3.48,0-4.808l-3.076-3.076l13.79-13.79c5.174,2.885,10.752,3.06,14.168,0.09\n      c7.448,3.854,15.755,5.906,24.382,5.906c14.198,0,27.547-5.529,37.587-15.569s15.57-23.389,15.57-37.587\n      S179.085,25.61,169.045,15.57z M161.975,83.674c-8.151,8.151-18.989,12.641-30.517,12.641c-11.528,0-22.366-4.489-30.518-12.641\n      c-16.826-16.827-16.826-44.206,0-61.033C109.092,14.49,119.93,10,131.458,10c11.527,0,22.365,4.489,30.517,12.641\n      s12.641,18.989,12.641,30.517C174.615,64.685,170.126,75.523,161.975,83.674z\"\n      />\n    </g>\n  )\n}\n\nconst Gear = props => {\n  return (\n    <g className={props.className}>\n      <path d=\"M443.031,137.652L413.73,109.5L259.506,270.021c-3.835,3.998-9.139,6.262-14.681,6.27c-0.007,0-0.021,0-0.027,0   c-5.535,0-10.833-2.252-14.675-6.229l-80.403-83.28L35.187,307.339c-4.005,4.223-9.397,6.352-14.79,6.352   c-5.045,0-10.098-1.857-14.049-5.611c-8.167-7.758-8.5-20.672-0.734-28.838l129.2-136c3.829-4.032,9.146-6.331,14.708-6.351   c0.027,0,0.054,0,0.082,0c5.535,0,10.833,2.251,14.674,6.229l80.485,83.368L384.32,81.239l-29.302-28.152l117.232-33.925   L443.031,137.652z M20.397,340.89c-4.692,0-9.248-0.68-13.6-1.973v114.172h61.2V312.263l-13.124,13.803   C45.965,335.519,33.385,340.89,20.397,340.89z M81.597,453.089h61.2V233.518l-61.2,64.396V453.089z M210.593,288.939   l-54.196-56.101v220.251h61.2V294.921C215.081,293.154,212.769,291.183,210.593,288.939z M244.865,303.49   c-4.691,0-9.249-0.68-13.668-2.039v151.639h61.201V275.066l-13.26,13.805C270.229,298.119,257.718,303.49,244.865,303.49z    M305.998,260.921v192.168h61.199V197.206L305.998,260.921z M414.525,147.974l-33.728,35.088v270.027h61.2V174.358L414.525,147.974 z\" />\n    </g>\n  )\n}\n\nconst Fist = props => {\n  return (\n    <g className={props.className}>\n      <path d=\"M 9.875 1.96875 C 9.340625 1.9546875 8.81875 2.2375 8.59375 2.6875 L 7.59375 4.8125 L 10.09375 5.90625 L 11 3.90625 C 11.3 3.20625 11.00625 2.39375 10.40625 2.09375 C 10.23125 2.01875 10.053125 1.9734375 9.875 1.96875 z M 14.0625 2.28125 C 13.528125 2.24375 13.0375 2.475 12.8125 3 L 11.09375 6.1875 C 11.09375 6.1875 12.5125 6.89375 12.8125 7.09375 C 13.2125 7.29375 13.1875 8 13.1875 8 L 15.1875 4.1875 C 15.4875 3.4875 15.29375 2.70625 14.59375 2.40625 C 14.41875 2.33125 14.240625 2.29375 14.0625 2.28125 z M 17 4.4375 C 16.55957 4.4804688 16.15625 4.71875 15.90625 5.09375 L 13.8125 9 C 13.4125 9.6 13.7125 10.5125 14.3125 10.8125 C 15.0125 11.2125 15.8875 11.0125 16.1875 10.3125 L 18.3125 6.40625 C 18.7125 5.80625 18.4125 4.89375 17.8125 4.59375 C 17.55 4.44375 17.264258 4.4117188 17 4.4375 z M 7 5.6875 C 5.9 5.6875 4.89375 6.50625 4.59375 7.90625 C 4.29375 8.90625 3.4875 11.7875 3.1875 12.6875 C 2.7875 13.6875 3.1 14.59375 3.5 15.09375 C 3.7 15.39375 4.6125 16.20625 5.3125 16.90625 C 5.9125 17.50625 6.09375 18.1875 6.09375 19.1875 L 6.09375 22 L 16.1875 22 L 16.1875 20.40625 C 16.1875 19.10625 17.0875 19.2875 17.6875 17.6875 C 17.9875 16.9875 19 14.3125 19 14.3125 C 16.4 15.1125 15.5875 13.3875 15.6875 12.1875 C 14.6875 12.3875 13.1 12.1125 12.5 10.8125 C 12 11.3125 11.3 11.90625 10 11.40625 L 7.6875 10.1875 C 7.2462242 10.029902 7.0905628 9.5244334 7.03125 8.90625 L 10.3125 10.5 C 11.1125 10.9 12.00625 10.6125 12.40625 9.8125 C 12.80625 9.1125 12.4875 8.0875 11.6875 7.6875 L 7.8125 5.90625 C 7.562995 5.7814975 7.2820069 5.713392 7.03125 5.71875 C 7.0188141 5.7111664 7.015625 5.6875 7 5.6875 z M 19.65625 7.96875 C 19.121875 7.93125 18.63125 8.1625 18.40625 8.6875 L 16.90625 11.5 C 16.60625 12.2 16.8 13.0125 17.5 13.3125 C 18.2 13.6125 19.0125 13.2875 19.3125 12.6875 L 20.8125 9.90625 C 21.1125 9.20625 20.8875 8.39375 20.1875 8.09375 C 20.0125 8.01875 19.834375 7.98125 19.65625 7.96875 z\" />\n    </g>\n  )\n}\n\nconst Bulb = props => {\n  return (\n    <g className={props.className}>\n      <path d=\"M353.601,496.4c0,7.507-6.093,13.6-13.601,13.6H231.2c-7.507,0-13.6-6.093-13.6-13.6c0-7.508,6.093-13.601,13.6-13.601H340   C347.508,482.8,353.601,488.893,353.601,496.4z M340,516.8H231.2c-8.949,0-15.878,8.644-12.899,18.034   c1.795,5.664,7.527,9.166,13.471,9.166h0.204c7.854,0,15.035,4.44,18.55,11.465l0.143,0.286   c4.74,9.465,14.416,15.449,25.004,15.449h19.856c10.588,0,20.264-5.984,24.997-15.449l0.143-0.286   c3.516-7.024,10.696-11.465,18.55-11.465h0.204c5.943,0,11.676-3.502,13.471-9.166C355.878,525.443,348.949,516.8,340,516.8z    M285.601,81.6c7.507,0,13.6-6.093,13.6-13.6V13.6c0-7.507-6.093-13.6-13.6-13.6C278.093,0,272,6.093,272,13.6V68   C272,75.507,278.093,81.6,285.601,81.6z M141.352,133.382c2.652,2.659,6.134,3.985,9.615,3.985c3.482,0,6.963-1.326,9.615-3.985   c5.311-5.311,5.311-13.92,0-19.23l-38.467-38.468c-5.304-5.311-13.927-5.311-19.23,0c-5.311,5.311-5.311,13.919,0,19.23   L141.352,133.382z M108.8,258.4c0-7.507-6.093-13.6-13.6-13.6H40.8c-7.507,0-13.6,6.093-13.6,13.6c0,7.507,6.093,13.6,13.6,13.6   h54.4C102.708,272,108.8,265.907,108.8,258.4z M141.352,383.418l-38.467,38.468c-5.311,5.311-5.311,13.92,0,19.23   c2.652,2.659,6.133,3.984,9.615,3.984c3.481,0,6.963-1.325,9.615-3.984l38.467-38.468c5.311-5.311,5.311-13.919,0-19.23   C155.278,378.107,146.656,378.107,141.352,383.418z M429.849,383.418c-5.311-5.311-13.92-5.311-19.23,0s-5.311,13.92,0,19.23   l38.468,38.468c2.658,2.659,6.134,3.984,9.615,3.984s6.956-1.325,9.615-3.984c5.311-5.311,5.311-13.92,0-19.23L429.849,383.418z    M530.4,244.8H476c-7.507,0-13.6,6.093-13.6,13.6c0,7.507,6.093,13.6,13.6,13.6h54.4c7.507,0,13.6-6.093,13.6-13.6   C544,250.893,537.907,244.8,530.4,244.8z M420.233,137.367c3.481,0,6.956-1.326,9.615-3.985l38.468-38.468   c5.311-5.311,5.311-13.919,0-19.23c-5.311-5.311-13.92-5.311-19.23,0l-38.468,38.468c-5.311,5.311-5.311,13.919,0,19.23   C413.271,136.041,416.752,137.367,420.233,137.367z M353.601,462.4c0,7.507-6.093,13.6-13.601,13.6H231.2   c-7.507,0-13.6-6.093-13.6-13.6c0-7.242,5.678-13.11,12.818-13.519C221.952,372.354,142.8,355.307,142.8,265.2   c0-78.866,63.934-142.8,142.8-142.8c78.866,0,142.8,63.934,142.8,142.8c0,90.106-79.152,107.154-87.618,183.682   C347.922,449.29,353.601,455.158,353.601,462.4z M254.259,160.548c-2.115-5.216-8.051-7.725-13.287-5.624   c-34.755,14.083-61.104,44.186-70.482,80.525c-1.408,5.46,1.877,11.016,7.331,12.424c0.85,0.224,1.707,0.326,2.55,0.326   c4.542,0,8.684-3.053,9.874-7.65c7.766-30.11,29.594-55.053,58.385-66.715C253.851,171.721,256.367,165.777,254.259,160.548z\" />\n    </g>\n  )\n}\n\nconst Model = props => {\n  const { className, onClick } = props\n  const cl = bem('model', className)\n\n  const stageWidth = 152\n  const stageGutter = 10\n  const stageOffset = 0\n\n  const dimensionWidth = 340\n  const dimensionHeight = 30\n  const dimensionGutter = 0\n  const dimensionOffset = 410\n\n  const origin = {\n    x: 50,\n    y: 420,\n  }\n\n  const stages = [\n    {\n      name: 'Reporting',\n      icon: (\n        <Chart className={cl('icon', '$chart').toString()} x=\"100\" y=\"400\" />\n      ),\n    },\n    {\n      name: 'Analyzing',\n      icon: (\n        <Magnify\n          className={cl('icon', '$magnify').toString()}\n          x=\"100\"\n          y=\"300\"\n        />\n      ),\n    },\n    {\n      name: 'Optimizing',\n      icon: <Gear className={cl('icon', '$gear').toString()} />,\n    },\n    {\n      name: 'Empowering',\n      icon: <Fist className={cl('icon', '$fist').toString()} />,\n    },\n    {\n      name: 'Innovating',\n      icon: <Bulb className={cl('icon', '$bulb').toString()} />,\n    },\n  ]\n\n  const dimensions = [\n    'Data',\n    'Metrics',\n    'Skills',\n    'Technology',\n    'Leadership',\n    'Culture',\n    'Strategy',\n    'Agility',\n    'Integration',\n    'Empowerment',\n  ]\n\n  const gradients = [\n    '#e17055',\n    '#fdcb6e',\n    '#00b894',\n    '#00cec9',\n    '#0984e3',\n    '#6c5ce7',\n  ]\n\n  const dimensionGradients = [\n    '#00b894',\n    '#00cec9',\n    '#6c5ce7',\n    '#0984e3',\n    '#e17055',\n    '#fdcb6e',\n    '#d63031',\n    '#e84393',\n    '#558B2F',\n    '#8BC34A',\n  ]\n\n  return (\n    <svg viewBox=\"0 0 800 400\">\n      <defs>\n        <clipPath id=\"myClip\">\n          <path\n            d=\"M0 300 Q 400 300 800 0 L 800 400 L 0 400 L 0 300\"\n            stroke=\"black\"\n            strokeWidth=\"1\"\n            fill=\"transparent\"\n          />\n        </clipPath>\n\n        <path id=\"capPath\" d=\"M-25,-50 L25,0 L-25,50\" fill=\"none\" />\n\n        {gradients.map((gradient, index) => (\n          <linearGradient\n            id={`gradient-${index}`}\n            x1=\"0%\"\n            y1=\"0%\"\n            x2=\"100%\"\n            y2=\"100%\"\n            key={index}\n          >\n            <stop offset=\"0%\" stopColor={gradient} />\n            <stop offset=\"100%\" stopColor={gradients[index + 1]} />\n          </linearGradient>\n        ))}\n\n        {Array(5)\n          .fill(true)\n          .map((_, index) => (\n            <g key={`index-dimGradient-${index}`}>\n              <linearGradient\n                id={`dimensionGradient-${index}-left`}\n                x1=\"0%\"\n                y1=\"50%\"\n                x2=\"100%\"\n                y2=\"50%\"\n                key={`dimensionGradient-${index}-left`}\n              >\n                <stop offset=\"0%\" stopColor={dimensionGradients[index * 2]} />\n                <stop\n                  offset=\"100%\"\n                  stopColor={dimensionGradients[index * 2 + 1]}\n                />\n              </linearGradient>\n\n              <linearGradient\n                id={`dimensionGradient-${index}-right`}\n                x1=\"100%\"\n                y1=\"50%\"\n                x2=\"0%\"\n                y2=\"50%\"\n                key={`dimensionGradient-${index}-right`}\n              >\n                <stop offset=\"0%\" stopColor={dimensionGradients[index * 2]} />\n                <stop\n                  offset=\"100%\"\n                  stopColor={dimensionGradients[index * 2 + 1]}\n                />\n              </linearGradient>\n            </g>\n          ))}\n      </defs>\n\n      {stages.map((stage, index) => (\n        <g\n          className={cl('stage', {\n            $faded:\n              props.highlight && stage.name.toLowerCase() !== props.highlight,\n          }).toString()}\n          key={`stage-${index}`}\n        >\n          <rect\n            className={`model__stage-rect model__stage-rect--${stage.name.toLowerCase()}`}\n            x={stageOffset + index * (stageWidth + stageGutter)}\n            y=\"0\"\n            width={stageWidth}\n            height=\"400\"\n            clipPath=\"url(#myClip)\"\n          />\n          <text\n            className={cl('stage-name').toString()}\n            x={\n              stageOffset + index * (stageWidth + stageGutter) + stageWidth / 2\n            }\n            y={380}\n            fill=\"white\"\n            alignmentBaseline=\"middle\"\n            textAnchor=\"middle\"\n          >\n            {stage.name}\n          </text>\n          {stage.icon}\n        </g>\n      ))}\n\n      {props.maturityScore && (\n        <rect\n          width=\"800\"\n          height=\"400\"\n          x={160 * props.maturityScore}\n          clipPath=\"url(#myClip)\"\n          fill=\"#FFFFFF\"\n          fillOpacity=\"0.7\"\n        />\n      )}\n    </svg>\n  )\n}\n\nexport default Model\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/input.css'\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    if (!this.props.showMeta) return null\n\n    const input = bem('input', { $meta: this.props.textarea })\n\n    return (\n      <div className={input.toString()}>\n        <div className={input('description').toString()}>\n          {this.props.description}\n        </div>\n        {this.props.textarea ? (\n          <textarea\n            className={input('field').toString()}\n            onChange={e => this.props.update(e.target.value)}\n            placeholder={this.props.placeholder}\n            value={this.props.value || ''}\n          />\n        ) : (\n          <input\n            type=\"text\"\n            className={input('field').toString()}\n            onChange={e => this.props.update(e.target.value)}\n            placeholder={this.props.placeholder}\n            value={this.props.value || ''}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Input\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/scalar.css'\n\nclass Scalar extends React.Component {\n  render() {\n    if (!this.props.showMeta) return null\n\n    const cl = bem('scalar', 'no-show')\n\n    return (\n      <div className={cl.toString()} id={this.props.id}>\n        <div className={cl('title').toString()}>{this.props.question}</div>\n        <div className={cl('scale').toString()}>\n          <div>←{this.props.min}</div>\n          <div>{this.props.max}→</div>\n        </div>\n        <div className={cl('options').toString()}>\n          {Array(11)\n            .fill(true)\n            .map((option, index) => (\n              <div\n                className={cl('option', {\n                  $selected: index === this.props.currentAnswer,\n                }).toString()}\n                onClick={() => this.props.answer(this.props.id, index)}\n                key={index}\n              >\n                {index}\n                <br />\n              </div>\n            ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Scalar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/likert.css'\n\nclass Likert extends React.Component {\n  render() {\n    if (!this.props.showMeta) return null\n\n    const cl = bem('likert')\n\n    const options = [\n      'Strongly disagree',\n      'Disagree',\n      'Neutral',\n      'Agree',\n      'Strongly agree',\n    ]\n\n    return (\n      <div className={cl.toString()} id={this.props.id}>\n        <div className={cl('title').toString()}>{this.props.question}</div>\n        <div className={cl('options').toString()}>\n          {options.map((option, index) => (\n            <div\n              className={cl('option', {\n                $selected: index === this.props.currentAnswer,\n              }).toString()}\n              onClick={() => this.props.answer(this.props.id, index)}\n              key={option}\n            >\n              {option}\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Likert\n","import { useEffect } from 'react'\n\nfunction useGoToTop(key = [true]) {\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    })\n  }, key)\n}\n\nfunction updateMetaAnswer(setState, localState, key, value) {\n  setState(\n    Object.assign({}, localState, {\n      meta: Object.assign({}, localState.meta, {\n        [key]: value,\n      }),\n    })\n  )\n}\n\nfunction updateAnswer(setState, localState, key, value) {\n  setState(\n    Object.assign({}, localState, {\n      answers: Object.assign({}, localState.answers, {\n        [key]: value,\n      }),\n    })\n  )\n}\n\nfunction firstUnanswered(answers, keys) {\n  return keys.find(key => !answers[key] && answers[key] !== 0)\n}\n\nexport { useGoToTop, updateAnswer, updateMetaAnswer, firstUnanswered }\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/general.css'\n\nimport { Button, Input } from 'components'\nimport { Link } from 'react-router-dom'\nimport Scalar from './scalar'\nimport Likert from './likert'\nimport { useGoToTop, updateMetaAnswer, firstUnanswered } from '../../lib/common'\n\nfunction allAnswered(localState, showMeta) {\n  const keys = ['organization-name', 'evaluator-name', 'role']\n  const allQuestions = firstUnanswered(localState.meta, keys)\n\n  const metaKeys = [\n    'size',\n    'data-driven-intent',\n    'data-driven-plan',\n    'data-driven-information',\n    'data-driven-level',\n  ]\n  const allMeta = firstUnanswered(localState.meta, metaKeys)\n\n  return !allQuestions && (!showMeta || !allMeta)\n}\n\nfunction General({ state, dispatch }) {\n  const [localState, setState] = useState({\n    answers: {},\n    meta: state.meta.general || {},\n  })\n\n  useGoToTop()\n  const cl = bem('general')\n\n  return (\n    <div className={cl.toString()}>\n      <h2>General Information</h2>\n      <span>\n        The assessment scope is a self-defined scope. In larger organizations it\n        can be hard to determine the overall data-driven maturity level. Setting\n        a scope (e.g. business unit, company division, product team) will help\n        you contextualize the questions and help you determine maturity more\n        accurately. The overall data-driven maturity can be attained by\n        combining the results of several assessments.\n      </span>\n\n      <Input\n        showMeta={true}\n        description=\"Organization name (featured on final report)\"\n        update={value =>\n          updateMetaAnswer(setState, localState, 'organization-name', value)\n        }\n        value={localState.meta['organization-name']}\n      />\n      <Input\n        showMeta={true}\n        description=\"Assessment scope (optional, featured on final report)\"\n        update={value => updateMetaAnswer(setState, localState, 'scope', value)}\n        value={localState.meta['scope']}\n      />\n      <Input\n        showMeta={true}\n        description=\"Evaluator name (featured on final report)\"\n        update={value =>\n          updateMetaAnswer(setState, localState, 'evaluator-name', value)\n        }\n        value={localState.meta['evaluator-name']}\n      />\n      <Input\n        showMeta={true}\n        description=\"Evaluator role (featured on final report)\"\n        update={value => updateMetaAnswer(setState, localState, 'role', value)}\n        value={localState.meta['role']}\n      />\n      <Input\n        showMeta={state.showMeta}\n        description=\"Approximate number of employees in the organization\"\n        update={value => updateMetaAnswer(setState, localState, 'size', value)}\n        value={localState.meta['size']}\n      />\n\n      <Likert\n        showMeta={state.showMeta}\n        answer={(id, answer) =>\n          updateMetaAnswer(setState, localState, id, answer)\n        }\n        id={'data-driven-intent'}\n        question=\"My organization is planning to become data-driven.\"\n        currentAnswer={localState.meta['data-driven-intent']}\n      />\n\n      <Likert\n        showMeta={state.showMeta}\n        answer={(id, answer) =>\n          updateMetaAnswer(setState, localState, id, answer)\n        }\n        id={'data-driven-plan'}\n        question=\"We have a clear idea on how to become data-driven.\"\n        currentAnswer={localState.meta['data-driven-plan']}\n      />\n\n      <Likert\n        showMeta={state.showMeta}\n        answer={(id, answer) =>\n          updateMetaAnswer(setState, localState, id, answer)\n        }\n        id={'data-driven-information'}\n        question=\"We can use more information on how to become data-driven.\"\n        currentAnswer={localState.meta['data-driven-information']}\n      />\n\n      <Scalar\n        showMeta={state.showMeta}\n        answer={(id, answer) =>\n          updateMetaAnswer(setState, localState, id, answer)\n        }\n        id={`data-driven-level`}\n        question=\"How data-driven is your organization now?\"\n        min=\"The organization is not data-driven at all\"\n        max=\"The organization is fully data-driven\"\n        currentAnswer={localState.meta[`data-driven-level`]}\n      />\n\n      {allAnswered(localState, state.showMeta) ? (\n        <Link to=\"stages\">\n          <Button\n            onClick={() =>\n              dispatch({\n                type: 'SUBMIT_ANSWERS',\n                payload: {\n                  key: 'general',\n                  meta: localState.meta,\n                  answers: localState.answers,\n                },\n              })\n            }\n            block\n          >\n            Continue\n          </Button>\n        </Link>\n      ) : (\n        <Button block>Please answer all questions before continuing</Button>\n      )}\n    </div>\n  )\n}\n\nexport default General\n","const clean = text => {\n  return text\n    .replace(/\\[.*?\\]/g, '')\n    .replace(/\\``(.*?)''/g, (match, p1) => `\\\"${p1}\\\"`)\n    .replace(/\\`(.*?)'/g, (match, p1) => `\\'${p1}\\'`)\n    .replace(/\\\\textdollar/g, '$')\n    .replace(/\\\\textit{(.*?)}/g, (match, p1) => `${p1}`)\n    .replace(/\\\\cite{(.*?)}/g, '')\n    .replace(/\\\\\\%/g, '%')\n}\n\nconst dictionary = {\n  'analytical data': 'Data collected to be used in analysis',\n  analytics:\n    'Business intelligence and business analytics activities; Turning data into action',\n  'data lake':\n    'Accessible data warehousing where data is largely kept in its original form',\n  IoT: 'Internet of Things',\n  KPI: 'Key Performance Indicator',\n  'analytical model':\n    'Data fueled model that is able to predict future trends or behavior',\n  'machine learning':\n    'Using known behavior to learn a system to predict future behavior',\n  'analytical product':\n    'Product or service with built-in analytical capabilities (e.g. smart thermometer)',\n  'data literacy': 'The ability to interpret and use statistics and data',\n  'data-driven':\n    'Using data to base decisions on evidence rather than intuition',\n}\n\nconst info = text => {\n  for (let key of Object.keys(dictionary)) {\n    const re = new RegExp(`(${key})`, 'gi')\n    text = text.replace(\n      re,\n      (match, p1) =>\n        `<span class=\"dict\">\n          ${p1}\n          <span class=\"dict__definition\">\n            ${dictionary[key]}\n          </span>\n        </span>`\n    )\n  }\n  return text\n}\n\nconst capitalize = text => text.charAt(0).toUpperCase() + text.slice(1)\n\nconst score = questions => {\n  const scores = {}\n  const max = 5\n\n  for (let category in questions) {\n    let score = 0\n\n    for (let i = 1; i <= max; i++) {\n      const relevantQuestions = questions[category].filter(q => q.max >= i)\n      const questionValue = 1 / relevantQuestions.length\n      for (let question of relevantQuestions) {\n        if (question.score >= i) {\n          score += questionValue\n        }\n      }\n    }\n\n    scores[category] = score\n  }\n\n  return scores\n}\n\nexport { clean, capitalize, score, info }\n\nexport default {}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/maturity-question.css'\n\nimport { info } from 'lib/utils'\n\nclass MaturityQuestion extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hoverIndex: -1,\n    }\n  }\n\n  enterAnswer(index) {\n    this.setState({\n      hoverIndex: index,\n    })\n  }\n\n  leaveAnswer(index) {\n    if (index === this.state.hoverIndex) {\n      this.setState({\n        hoverIndex: -1,\n      })\n    }\n  }\n\n  render() {\n    const { question } = this.props\n    const cl = bem('maturity-question')\n    const options = question.options.map((option, index) => (\n      <div\n        key={index}\n        className={cl('option', {\n          $highlighted: index <= this.state.hoverIndex,\n          $answered: index === this.props.currentAnswer,\n        }).toString()}\n        onMouseEnter={() => this.enterAnswer(index)}\n        onMouseLeave={() => this.leaveAnswer(index)}\n        onClick={() => this.props.answer(this.props.id, index)}\n      >\n        <div className={cl('index').toString()}>{index}</div>\n        <div\n          className={cl('description').toString()}\n          dangerouslySetInnerHTML={{ __html: info(option) }}\n        />\n      </div>\n    ))\n\n    return (\n      <div className={cl.toString()} id={this.props.id}>\n        <div className={cl('title').toString()}>\n          {question.name} -{' '}\n          <span className={cl('info').toString()}>\n            Please select the statement best fitting for the current state of\n            your organization\n          </span>\n        </div>\n        {options}\n      </div>\n    )\n  }\n}\n\nexport default MaturityQuestion\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/dimension.css'\n\nimport { Link } from 'react-router-dom'\n\nimport { Transition } from 'react-transition-group'\nimport MaturityQuestion from './maturityQuestion'\nimport Likert from './likert'\nimport Scalar from './scalar'\nimport { Button, Input } from 'components'\nimport { capitalize, info } from 'lib/utils'\nimport {\n  useGoToTop,\n  updateMetaAnswer,\n  updateAnswer,\n  firstUnanswered,\n} from 'lib/common'\n\nimport { withRouter } from 'react-router-dom'\n\nfunction dimensionNames(state) {\n  return Object.keys(state.dimensions)\n}\n\nfunction nextDimension(state, dimensionKey) {\n  return dimensionNames(state)[dimensionNames(state).indexOf(dimensionKey) + 1]\n}\n\nfunction next(state, dimensionKey, questions, answers, meta, dispatch) {\n  const openQuestion = firstOpenQuestion(\n    state.showMeta,\n    answers,\n    meta,\n    questions\n  )\n\n  if (!openQuestion) {\n    dispatch({\n      type: 'SUBMIT_ANSWERS',\n      payload: {\n        key: dimensionKey,\n        meta,\n        answers,\n      },\n    })\n\n    dispatch({\n      type: 'NAVIGATE',\n      payload: {\n        url: nextDimension(state, dimensionKey) || '../report',\n      },\n    })\n  } else {\n    document.getElementById(openQuestion).classList.add('--unanswered')\n    document.getElementById(openQuestion).scrollIntoView()\n  }\n}\n\nfunction key(...keys) {\n  return keys.map(k => k.replace(/ /g, '-').toLowerCase()).join('-')\n}\n\nfunction metaKeys(questions) {\n  const metaKeys = questions.reduce(\n    (keys, question) =>\n      keys.concat([\n        key(question.name, 'knowledge'),\n        key(question.name, 'importance'),\n      ]),\n    []\n  )\n\n  return metaKeys.concat([key('purpose'), key('importance')])\n}\n\nfunction answerKeys(questions) {\n  return questions.map(question => key(question.name))\n}\n\n// function firstUnanswered(answers, meta, questions) {\n//   const allMeta = metaKeys(questions).find(\n//     key => !Object.keys(meta).includes(key)\n//   )\n//   const allAnswers = answerKeys(questions).find(\n//     key => !Object.keys(answers).includes(key)\n//   )\n\n//   return allAnswers || allMeta\n// }\n\nfunction firstOpenQuestion(showMeta, answers, meta, questions) {\n  const allMeta = firstUnanswered(meta, metaKeys(questions))\n  const allAnswers = firstUnanswered(answers, answerKeys(questions))\n\n  return allAnswers || (showMeta && allMeta)\n}\n\nconst defaultState = {\n  answers: {},\n  meta: {},\n}\n\nfunction Dimension({ state, dispatch, dimensionKey }) {\n  const [localState, setState] = useState(defaultState)\n\n  useGoToTop([dimensionKey])\n\n  useEffect(() => {\n    setState(defaultState)\n  }, [dimensionKey])\n\n  const questions = state.questionnaire.dimensions[dimensionKey].questions\n  const dimension = state.dimensions[dimensionKey]\n\n  const answers = Object.assign(\n    {},\n    state.answers[dimensionKey],\n    localState.answers\n  )\n  const meta = Object.assign({}, state.meta[dimensionKey], localState.meta)\n\n  const cl = bem('dimension')\n\n  return (\n    <Transition in={true} appear={true} timeout={200}>\n      {animationState => (\n        <div\n          className={cl('', {\n            $entering: animationState === 'entering',\n            $entered: animationState === 'entered',\n            $exiting: animationState === 'exiting',\n            $exited: animationState === 'exited',\n          }).toString()}\n        >\n          <div className={cl('name').toString()}>{dimension.name}</div>\n          <div\n            className={cl('description').toString()}\n            dangerouslySetInnerHTML={{ __html: info(dimension.short) }}\n          />\n\n          {questions.map((question, index) => {\n            const questionKey = key(question.name)\n\n            const keyKnowledge = key(question.name, 'knowledge')\n            const keyImportance = key(question.name, 'importance')\n\n            return (\n              <div key={questionKey} className={cl('section').toString()}>\n                <MaturityQuestion\n                  in={true}\n                  key={questionKey}\n                  id={questionKey}\n                  question={question}\n                  currentAnswer={answers[questionKey]}\n                  answer={(id, answer) =>\n                    updateAnswer(setState, localState, id, answer)\n                  }\n                />\n\n                <Likert\n                  answer={(id, answer) =>\n                    updateMetaAnswer(setState, localState, id, answer)\n                  }\n                  currentAnswer={meta[keyKnowledge]}\n                  id={keyKnowledge}\n                  question=\"I have enough knowledge about the organization to answer this question.\"\n                  showMeta={state.showMeta}\n                />\n\n                <Scalar\n                  answer={(id, answer) =>\n                    updateMetaAnswer(setState, localState, id, answer)\n                  }\n                  id={keyImportance}\n                  question=\"How important is this attribute for determining data-driven maturity?\"\n                  min=\"Not important at all\"\n                  max=\"Very important\"\n                  currentAnswer={meta[keyImportance]}\n                  showMeta={state.showMeta}\n                />\n              </div>\n            )\n          })}\n\n          <Likert\n            answer={(id, answer) =>\n              updateMetaAnswer(setState, localState, id, answer)\n            }\n            id={key('purpose')}\n            currentAnswer={meta[key('purpose')]}\n            question=\"The purpose of this dimension is clear.\"\n            showMeta={state.showMeta}\n          />\n\n          <Scalar\n            answer={(id, answer) =>\n              updateMetaAnswer(setState, localState, id, answer)\n            }\n            id={key('importance')}\n            currentAnswer={meta[key('importance')]}\n            question=\"How important is this dimension for data-driven maturity?\"\n            min=\"Not important at all\"\n            max=\"Very important\"\n            showMeta={state.showMeta}\n          />\n\n          <Input\n            description=\"Any additional remarks or suggestions for this dimension?\"\n            update={value =>\n              updateMetaAnswer(setState, localState, key('random'), value)\n            }\n            value={meta[key('random')]}\n            textarea\n            showMeta={state.showMeta}\n          />\n\n          <Button\n            onClick={() =>\n              next(state, dimensionKey, questions, answers, meta, dispatch)\n            }\n            block\n          >\n            Continue\n          </Button>\n        </div>\n      )}\n    </Transition>\n  )\n}\n\nexport default withRouter(Dimension)\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/instructions.css'\nimport { Link } from 'react-router-dom'\n\nimport { Button } from 'components'\nimport { useGoToTop } from '../../lib/common'\n\nfunction Instructions({ state, dispatch }) {\n  useGoToTop()\n\n  const cl = bem('instructions')\n\n  return (\n    <div className={cl.toString()}>\n      {state.submitted && (\n        <Link to={`/assessment/report`}>\n          <Button>Go to finished report</Button>\n        </Link>\n      )}\n\n      <h2>Instructions</h2>\n      {state.showMeta ? (\n        <p>\n          The assessment consists of a maturity assessment and a meta-evaluation\n          of the assessment and model, used to validate the maturity model for\n          research purposes.\n        </p>\n      ) : (\n        <p>\n          The assessment consists of a comprehensive maturity assessment in the\n          form of multiple-choice questions.\n        </p>\n      )}\n      <h2>Purpose</h2>\n      <p>\n        The goal of the assessment is to gain insight into the data-driven\n        maturity level of your organization in a fast and accessible manner.\n        After the assessment a report will be compiled with the results and\n        information tailored to your maturity situation. We believe the report\n        can be the starting point of your data-driven strategy. Because of the\n        limitations of a self-assessment the goal is not to use this assessment\n        to compare maturity to other organizations.\n      </p>\n      <h2>Questions</h2>\n      <p>\n        Questions for the maturity assessment are multiple-choice. Each choice\n        is a statement corresponding to a certain maturity level for a specific\n        attribute of the dimension, progressing from immature to full maturity.\n        To answer the question, please read all statements carefully and select\n        the most advanced statement that represents the current state in the\n        organization.\n      </p>\n      <h2>Who should fill out this assessment?</h2>\n      <p>\n        The questions are made to assess the current state of data-driven\n        maturity in the organization in an accessible manner. The most suitable\n        assessor is someone in the organization with a good overview on the\n        following subjects: data, metrics, skills, technology, data-driven\n        culture, leadership, strategy, execution (of processes), analytical\n        integration, and analytical empowerment of employees. The questionnaire\n        requires no very specific knowledge. The most suitable evaluator would\n        likely be a Chief Information or Technology Officer.\n      </p>\n      <h2>What is data-driven?</h2>\n      <p>\n        Becoming data-driven is the quest to making better decisions as an\n        organization. Data-driven means using data to create evidence supporting\n        a decision opposed to relying on our intuition. Analytics, the field of\n        business intelligence and business analytics, aims to collect, process,\n        and analyze data to produce information that can help the\n        decision-making process.\n      </p>\n      <h2>A note on Internet Explorer</h2>\n      <p>\n        We recommend completing this assessment in a modern browser (Google\n        Chrome, Firefox, Microsoft Edge). The visuals are optimized for modern\n        browsers. Some users report certain quirks in Internet Explorer and were\n        unable to complete the assessment. We are working on a fix.\n      </p>\n      {state.showMeta && (\n        <p className={cl('research').toString()}>\n          The Data-Driven Maturity Model and the accompanying assessment are\n          part of the graduate research by Ruben Buitelaar for the Master's\n          degree ICT in Business at Leiden University. The parts of the\n          assessment in pink form a meta-evaluation conducted to validate the\n          maturity model and assessment. Questions in pink are not relevant for\n          your maturity score, but help us in improving the model and\n          assessment.\n          <br />\n          <b>Results will stay anonymous and confidential.</b>\n        </p>\n      )}\n      <Link to={`/assessment/general`}>\n        <Button onClick={() => dispatch({ type: 'finish' })} block>\n          Start Assessment\n        </Button>\n      </Link>\n    </div>\n  )\n}\n\nexport default Instructions\n","import data from 'data/dimensions/data'\nimport metrics from 'data/dimensions/metrics'\nimport skills from 'data/dimensions/skills'\nimport technology from 'data/dimensions/technology'\nimport leadership from 'data/dimensions/leadership'\nimport culture from 'data/dimensions/culture'\nimport strategy from 'data/dimensions/strategy'\nimport agility from 'data/dimensions/agility'\nimport integration from 'data/dimensions/integration'\nimport empowerment from 'data/dimensions/empowerment'\n\nimport reporting from 'data/stages/reporting'\nimport analyzing from 'data/stages/analyzing'\nimport optimizing from 'data/stages/optimizing'\nimport empowering from 'data/stages/empowering'\nimport innovating from 'data/stages/innovating'\n\nimport questionnaire from 'data/questionnaire'\nimport model from 'data/model'\n\nexport default {\n  dimensions: {\n    data,\n    metrics,\n    skills,\n    technology,\n    leadership,\n    culture,\n    strategy,\n    agility,\n    integration,\n    empowerment,\n  },\n  stages: {\n    reporting,\n    analyzing,\n    optimizing,\n    empowering,\n    innovating,\n  },\n  questionnaire,\n  model,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/model.css'\n\nimport { Button, Input } from 'components'\n\nclass Model extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      answers: {},\n    }\n  }\n\n  update(key, value) {\n    this.setState({\n      answers: Object.assign({}, this.state.answers, {\n        [key]: value,\n      }),\n    })\n  }\n\n  render() {\n    const cl = bem('model')\n\n    return (\n      <div className={cl.toString()}>\n        <h2>Model Information</h2>\n\n        <Button onClick={() => this.props.finish(this.state.answers)} block>\n          Submit & view report\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default Model\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/stages.css'\n\nimport { Button, Input, Model } from 'components'\nimport Likert from './likert'\nimport Scalar from './scalar'\nimport { clean, info, capitalize } from 'lib/utils'\nimport data from 'data'\nimport { Link } from 'react-router-dom'\nimport { useGoToTop, updateMetaAnswer, firstUnanswered } from '../../lib/common'\n\nfunction allAnswered(state, showMeta) {\n  const metaKeys = [\n    'stage-reporting-purpose',\n    'stage-reporting-importance',\n    'stage-analyzing-purpose',\n    'stage-analyzing-importance',\n    'stage-optimizing-purpose',\n    'stage-optimizing-importance',\n    'stage-empowering-purpose',\n    'stage-empowering-importance',\n    'stage-innovating-purpose',\n    'stage-innovating-importance',\n  ]\n  const allMeta = firstUnanswered(state.meta, metaKeys)\n\n  return !showMeta || !allMeta\n}\n\nfunction Stages({ state, dispatch }) {\n  const [localState, setState] = useState({\n    answers: {},\n    meta: state.meta.stages || {},\n  })\n\n  useGoToTop()\n\n  const cl = bem('stages')\n\n  const stages = [\n    'reporting',\n    'analyzing',\n    'optimizing',\n    'empowering',\n    'innovating',\n  ]\n\n  return (\n    <div className={cl.toString()}>\n      <h2>Stages</h2>\n      <div>\n        We first quickly introduce the stages of the data-driven maturity model.\n        It will help in defining a frame of reference for answering the\n        assessment questions.\n      </div>\n\n      {stages.map(stage => (\n        <div className={cl('stage').toString()} key={stage}>\n          <h2>{capitalize(stage)}</h2>\n          <Model highlight={stage} />\n          <div\n            className={cl('stage-description').toString()}\n            dangerouslySetInnerHTML={{\n              __html: info(clean(data.stages[stage].full)),\n            }}\n          />\n\n          <Likert\n            showMeta={state.showMeta}\n            id={`stage-${stage}-purpose`}\n            question=\"The purpose of this stage is clear\"\n            answer={(key, answer) =>\n              updateMetaAnswer(setState, localState, key, answer)\n            }\n            currentAnswer={localState.meta[`stage-${stage}-purpose`]}\n          />\n\n          <Scalar\n            showMeta={state.showMeta}\n            id={`stage-${stage}-importance`}\n            question=\"How important is this stage in data-driven maturity?\"\n            answer={(id, answer) =>\n              updateMetaAnswer(setState, localState, id, answer)\n            }\n            currentAnswer={localState.meta[`stage-${stage}-importance`]}\n            min=\"Not important at all\"\n            max=\"Very important\"\n          />\n        </div>\n      ))}\n\n      <Input\n        showMeta={state.showMeta}\n        description=\"Any additional remarks or suggestions about these stages?\"\n        update={value =>\n          updateMetaAnswer(setState, localState, 'stage-random', value)\n        }\n        value={localState.meta['stage-random']}\n        textarea\n      />\n\n      {allAnswered(localState, state.showMeta) ? (\n        <Link to=\"dimensions/data\">\n          <Button\n            onClick={() =>\n              dispatch({\n                type: 'SUBMIT_ANSWERS',\n                payload: {\n                  key: 'stages',\n                  meta: localState.meta,\n                  answers: localState.answers,\n                },\n              })\n            }\n            block\n          >\n            Continue\n          </Button>\n        </Link>\n      ) : (\n        <Button block>Please answer all questions before continuing</Button>\n      )}\n    </div>\n  )\n}\n\nexport default Stages\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/chart.css'\nimport { capitalize } from 'lib/utils'\nimport { Button, Input } from 'components'\nimport * as d3 from 'd3'\n\n//Wraps SVG text\nfunction wrap(text, width) {\n  text.each(function() {\n    var text = d3.select(this),\n      words = text\n        .text()\n        .split(/\\s+/)\n        .reverse(),\n      word,\n      line = [],\n      lineNumber = 0,\n      lineHeight = 0, // ems\n      y = text.attr('y'),\n      x = text.attr('x'),\n      dy = parseFloat(text.attr('dy')),\n      tspan = text\n        .text(null)\n        .append('tspan')\n        .attr('x', x)\n        .attr('y', y)\n        .attr('dy', dy + 'em')\n\n    while ((word = words.pop())) {\n      line.push(word)\n      tspan.text(line.join(' '))\n      if (tspan.node().getComputedTextLength() > width) {\n        line.pop()\n        tspan.text(line.join(' '))\n        line = [word]\n        tspan = text\n          .append('tspan')\n          .attr('x', x)\n          .attr('y', y)\n          .attr('dy', ++lineNumber * lineHeight + dy + 'em')\n          .text(word)\n      }\n    }\n  })\n} //wrap\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props)\n\n    const scores = props.scores\n    this.state = {\n      data: Object.keys(scores).map(key => ({\n        axis: key,\n        value: scores[key],\n      })),\n    }\n  }\n\n  componentDidMount() {\n    const HALF_PI = Math.PI / 2\n\n    const data = [this.state.data]\n    const id = '.report__chart'\n    const config = {\n      width: 400,\n      height: 400,\n      margin: {\n        left: 100,\n        top: 100,\n        right: 100,\n        bottom: 100,\n      },\n      circleOpacity: 0,\n      axisColor: '#000',\n      axisOpacity: 0.1,\n      areaOpacity: 0.7,\n      levels: 5,\n      maxValue: 5,\n      labelFactor: 1.25,\n      wrapWidth: 60,\n      color: d3.scaleOrdinal(d3.schemeCategory10),\n      roundStrokes: true,\n    }\n\n    //If the supplied maxValue is smaller than the actual one, replace by the max in the data\n    var maxValue = Math.max(\n      config.maxValue,\n      d3.max(data, function(i) {\n        return d3.max(\n          i.map(function(o) {\n            return o.value\n          })\n        )\n      })\n    )\n\n    //Names of each axis\n    const allAxis = data[0].map(function(i, j) {\n      return capitalize(i.axis)\n    })\n    const radius = Math.min(config.width / 2, config.height / 2) //Radius of the outermost circle\n    const Format = d3.format('%')\n    const angleSlice = (Math.PI * 2) / allAxis.length //The width in radians of each \"slice\"\n    //Scale for the radius\n    const rScale = d3\n      .scaleLinear()\n      .range([0, radius])\n      .domain([0, maxValue])\n\n    const svg = d3\n      .select(id)\n      .append('svg')\n      .attr('width', '100%')\n      .attr(\n        'viewBox',\n        `0 0 ${config.width +\n          config.margin.left +\n          config.margin.right} ${config.height +\n          config.margin.top +\n          config.margin.bottom}`\n      )\n\n    const g = svg\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          (config.width / 2 + config.margin.left) +\n          ',' +\n          (config.height / 2 + config.margin.top) +\n          ')'\n      )\n\n    //Wrapper for the grid & axes\n    const axisGrid = g.append('g').attr('class', 'axisWrapper')\n\n    //Filter for the outside glow\n    const filter = g\n      .append('defs')\n      .append('filter')\n      .attr('id', 'glow')\n    const feGaussianBlur = filter\n      .append('feGaussianBlur')\n      .attr('stdDeviation', '2.5')\n      .attr('result', 'coloredBlur')\n    const feMerge = filter.append('feMerge')\n    const feMergeNode_1 = feMerge\n      .append('feMergeNode')\n      .attr('in', 'coloredBlur')\n    const feMergeNode_2 = feMerge\n      .append('feMergeNode')\n      .attr('in', 'SourceGraphic')\n\n    const colors = ['#ff7580', '#ffc37e', '#54ce98', '#6cb5ed', '#9d92ef']\n    //Draw the background circles\n    axisGrid\n      .selectAll('.levels')\n      .data(d3.range(1, config.levels + 1).reverse())\n      .enter()\n      .append('circle')\n      .attr('class', 'gridCircle')\n      .attr('r', function(d, i) {\n        return (radius / config.levels) * d\n      })\n      .style('fill', (d, i) => colors[d - 1])\n      .style('stroke', (d, i) => colors[d - 1])\n      .style('fill-opacity', config.circleOpacity)\n      .style('filter', 'url(#glow)')\n\n    const maturityLevels = [\n      '',\n      'Reporting',\n      'Analyzing',\n      'Optimizing',\n      'Empowering',\n      'Innovating',\n    ]\n\n    //Text indicating at what % each level is\n    // axisGrid\n    //   .selectAll('.axisLabel')\n    //   .data(d3.range(1, config.levels + 1).reverse())\n    //   .enter()\n    //   .append('text')\n    //   .attr('class', 'axisLabel')\n    //   .attr('text-anchor', 'middle')\n    //   .attr('x', 4)\n    //   .attr('y', function(d) {\n    //     return -d * radius / config.levels\n    //   })\n    //   .attr('dy', '0.4em')\n    //   .style('font-size', '16px')\n    //   .style('width', '200px')\n    //   .attr('fill', '#000000')\n    //   .text(function(d, i) {\n    //     return maturityLevels[d]\n    //   })\n\n    /////////////////////////////////////////////////////////\n    //////////////////// Draw the axes //////////////////////\n    /////////////////////////////////////////////////////////\n\n    //Create the straight lines radiating outward from the center\n    const axis = axisGrid\n      .selectAll('.axis')\n      .data(allAxis)\n      .enter()\n      .append('g')\n      .attr('class', 'axis')\n    //Append the lines\n    axis\n      .append('line')\n      .attr('x1', 0)\n      .attr('y1', 0)\n      .attr('x2', function(d, i) {\n        return rScale(maxValue * 1.1) * Math.cos(angleSlice * i - Math.PI / 2)\n      })\n      .attr('y2', function(d, i) {\n        return rScale(maxValue * 1.1) * Math.sin(angleSlice * i - Math.PI / 2)\n      })\n      .attr('class', 'line')\n      .style('stroke', config.axisColor)\n      .style('stroke-width', '2px')\n      .style('opacity', config.axisOpacity)\n\n    //Append the labels at each axis\n    axis\n      .append('text')\n      .attr('class', 'legend')\n      .style('font-size', '18px')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'central')\n      .attr('dy', '0em')\n      .attr(\n        'x',\n        (d, i) =>\n          rScale(maxValue * config.labelFactor) *\n          Math.cos(angleSlice * i - HALF_PI)\n      )\n      .attr(\n        'y',\n        (d, i) =>\n          rScale(maxValue * config.labelFactor) *\n          Math.sin(angleSlice * i - HALF_PI)\n      )\n      .text(d => d)\n      .call(wrap, config.wrapWidth)\n\n    /////////////////////////////////////////////////////////\n    ///////////// Draw the radar chart blobs ////////////////\n    /////////////////////////////////////////////////////////\n\n    //The radial line function\n    const radarLine = d3\n      .radialLine()\n      .curve(d3.curveLinear)\n      .radius(function(d) {\n        return rScale(d.value)\n      })\n      .angle(function(d, i) {\n        return i * angleSlice\n      })\n\n    if (config.roundStrokes) {\n      radarLine.curve(d3.curveCardinalClosed)\n    }\n\n    //Create a wrapper for the blobs\n    const blobWrapper = g\n      .selectAll('.radarWrapper')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('class', 'radarWrapper')\n\n    //Append the backgrounds\n    blobWrapper\n      .append('path')\n      .attr('class', 'radarArea')\n      .attr('d', function(d, i) {\n        return radarLine(d)\n      })\n      .style('fill', function(d, i) {\n        return config.color(i)\n      })\n      .style('fill-opacity', config.areaOpacity)\n      .on('mouseover', function(d, i) {\n        //Dim all blobs\n        d3.selectAll('.radarArea')\n          .transition()\n          .duration(200)\n          .style('fill-opacity', 0.1)\n        //Bring back the hovered over blob\n        d3.select(this)\n          .transition()\n          .duration(200)\n          .style('fill-opacity', 1)\n      })\n      .on('mouseout', function() {\n        //Bring back all blobs\n        d3.selectAll('.radarArea')\n          .transition()\n          .duration(200)\n          .style('fill-opacity', config.areaOpacity)\n      })\n\n    //Create the outlines\n    blobWrapper\n      .append('path')\n      .attr('class', 'radarStroke')\n      .attr('d', function(d, i) {\n        return radarLine(d)\n      })\n      .style('stroke-width', config.strokeWidth + 'px')\n      .style('stroke', function(d, i) {\n        return config.color(i)\n      })\n      .style('fill', 'none')\n      .style('filter', 'url(#glow)')\n\n    //Append the circles\n    blobWrapper\n      .selectAll('.radarCircle')\n      .data(function(d, i) {\n        return d\n      })\n      .enter()\n      .append('circle')\n      .attr('class', 'radarCircle')\n      .attr('r', config.dotRadius)\n      .attr('cx', function(d, i) {\n        return rScale(d.value) * Math.cos(angleSlice * i - Math.PI / 2)\n      })\n      .attr('cy', function(d, i) {\n        return rScale(d.value) * Math.sin(angleSlice * i - Math.PI / 2)\n      })\n      .style('fill', function(d, i, j) {\n        return config.color(j)\n      })\n      .style('fill-opacity', 0.8)\n  }\n\n  render() {\n    return <div className=\"report__chart\" />\n  }\n}\n\nexport default Chart\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/report.css'\nimport { Redirect } from 'react-router-dom'\n\nimport Chart from './chart'\nimport { Button, Input, Model } from 'components'\nimport { clean, capitalize } from 'lib/utils'\nimport { useGoToTop, updateMetaAnswer } from 'lib/common'\nimport data from 'data'\nimport moment from 'moment'\n\nimport Scalar from './scalar'\nimport Likert from './likert'\n\nfunction score(questions, answers) {\n  const scores = {}\n  const max = 5\n\n  for (let key of Object.keys(questions.dimensions)) {\n    const dimension = questions.dimensions[key]\n    let score = 0\n    for (let i = 1; i <= max; i++) {\n      const relevantQuestions = dimension.questions.filter(\n        q => q.options.length >= i\n      )\n      const questionValue = 1 / relevantQuestions.length\n      for (let question of relevantQuestions) {\n        const answerKey = question.name.replace(/ /g, '-').toLowerCase()\n        const answer = answers[key][answerKey]\n        if (answer && answer >= i) {\n          score += questionValue\n        }\n      }\n    }\n\n    scores[key] = score.toFixed(1)\n  }\n\n  return scores\n}\n\nfunction permalink(submitted) {\n  const url = new URL(\n    'https://data-driven.rubenbuitelaar.com/assessment/report'\n  )\n  url.searchParams.set('id', submitted)\n\n  return url.href\n}\n\n// function pdfURL(meta) {\n//   const url2pdf = new URL(\n//     'https://report.rubenbuitelaar.com/api/render?emulateScreenMedia=false&pdf.margin.top=2cm&pdf.margin.right=2cm&pdf.margin.bottom=2cm&pdf.margin.left=2cm'\n//   )\n\n//   const date = moment(meta.start).format('DD-MM-YYYY')\n//   const orgName = meta.general['organization-name'].replace(/( |\\.)/g, '')\n//   url2pdf.searchParams.set(\n//     'attachmentName',\n//     `DataDrivenMaturityReport-${orgName}-${date}.pdf`\n//   )\n//   url2pdf.searchParams.set('url', permalink())\n\n//   return url2pdf.href\n// }\n\nfunction allAnswered(showMeta, meta) {\n  const metaKeys = [\n    'report-data-accuracy',\n    'report-metrics-accuracy',\n    'report-skills-accuracy',\n    'report-technology-accuracy',\n    'report-leadership-accuracy',\n    'report-culture-accuracy',\n    'report-strategy-accuracy',\n    'report-agility-accuracy',\n    'report-integration-accuracy',\n    'report-empowerment-accuracy',\n    'model-purpose',\n    'model-scope',\n    'report-results',\n    'report-overall-accuracy',\n    'report-nps',\n  ]\n  const allMeta = metaKeys.find(key => !Object.keys(meta).includes(key))\n\n  return !allMeta || !showMeta\n}\n\nfunction reset(dispatch) {\n  dispatch({ type: 'RESET_ASSESSMENT' })\n}\n\nfunction Report({ global, dispatch }) {\n  if (!Object.entries(global.answers).length) return <div />\n\n  const [state, setState] = useState({\n    meta: global.meta || {},\n    date: global.date,\n    isReset: global.isReset || false,\n    showMeta: global.showMeta,\n  })\n\n  useGoToTop()\n\n  // if (state.isReset) {\n  //   return <Redirect to=\"/assessment\" />\n  // }\n\n  useEffect(() => {\n    if (!global.showMeta && !global.submitted) {\n      dispatch({\n        type: 'SUBMIT_ASSESSMENT',\n        payload: { dispatch, meta: state.meta },\n      })\n    }\n  }, true)\n\n  const cl = bem('report', {\n    $submitted: global.submitted,\n  })\n  const scores = score(data.questionnaire, global.answers)\n  const maturityScore = (\n    Object.values(scores).reduce((a, b) => a + parseFloat(b), 0) / 10\n  ).toFixed(1)\n\n  const dimensions = [\n    'data',\n    'metrics',\n    'skills',\n    'technology',\n    'leadership',\n    'culture',\n    'strategy',\n    'agility',\n    'integration',\n    'empowerment',\n  ]\n\n  const stages = [\n    'starting',\n    'reporting',\n    'analyzing',\n    'optimizing',\n    'empowering',\n    'innovating',\n  ]\n\n  return (\n    <div className={cl.toString()}>\n      <div className={cl('info').toString()}>\n        {!global.submitted ? (\n          <p className=\"no-print alert alert--green\">\n            Please read the report and answer the final questions.\n          </p>\n        ) : (\n          <>\n            <p className=\"no-print alert alert--green\">\n              Permalink to your report and results (share at your own\n              discretion):\n              <br />\n              <a\n                className={cl('link').toString()}\n                href={permalink(global.submitted)}\n              >\n                {permalink(global.submitted)}\n              </a>\n            </p>\n            <div className={cl('buttons').toString()}>\n              <Button\n                className={`no-print`}\n                onClick={() =>\n                  window.confirm(\n                    'Are you sure you want to reset the assessment?'\n                  ) && reset(dispatch)\n                }\n              >\n                Restart assessment\n              </Button>\n            </div>\n          </>\n        )}\n\n        <div className={cl('title').toString()}>\n          Data-Driven Maturity Report\n          <br />\n          Score: {maturityScore}/5\n        </div>\n\n        <div className={cl('meta').toString()}>\n          <div className={cl('meta-row').toString()}>\n            <div>Organization:</div>\n            <div>\n              {global.meta.general['organization-name']}\n              {global.meta.general['scope'] &&\n                ` (${global.meta.general['scope']})`}\n            </div>\n          </div>\n          <div className={cl('meta-row').toString()}>\n            <div>Evaluator:</div>\n            <div>{global.meta.general['evaluator-name']}</div>\n          </div>\n          <div className={cl('meta-row').toString()}>\n            <div>Role:</div>\n            <div>{global.meta.general['role']}</div>\n          </div>\n          <div className={cl('meta-row').toString()}>\n            <div>Date:</div>\n            <div>{global.date}</div>\n          </div>\n        </div>\n      </div>\n      <div className={cl('score').toString()} />\n      <div className={cl('model').toString()}>\n        <Model maturityScore={maturityScore} />\n      </div>\n      <div className={cl('overview').toString()}>\n        <div className={cl('overview-score').toString()}>\n          {dimensions.map(dimension => {\n            return (\n              <div\n                className={cl('overview-dimension').toString()}\n                key={`overview-dimension-${dimension}`}\n              >\n                <div\n                  className={cl('overview-dimension-progress', {\n                    [`$level-${Math.floor(scores[dimension])}`]: true,\n                  }).toString()}\n                  style={{\n                    width: `${Math.max((scores[dimension] / 5) * 100, 5)}%`,\n                  }}\n                />\n                <div className={cl('overview-dimension-score').toString()}>\n                  {capitalize(dimension)}: {scores[dimension]}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        <Chart scores={scores} />\n      </div>\n      <div className={cl('reading-guide').toString()}>\n        <h2>Reading Guide</h2>\n        <span>{data.model.readingGuide}</span>\n      </div>\n      {dimensions.map(dimension => {\n        const level = Math.floor(scores[dimension])\n        const asIsStage = stages[level]\n        const toBeStage = stages[Math.min(level + 1, 5)]\n        return (\n          <div key={dimension} className={cl('dimension').toString()}>\n            <div\n              className={cl('dimension-progress', {\n                [`$level-${Math.floor(scores[dimension])}`]: true,\n              }).toString()}\n              style={{\n                width: `${Math.max((scores[dimension] / 5) * 100, 5)}%`,\n              }}\n            />\n            <div className={cl('dimension-header').toString()}>\n              <div className={cl('dimension-name').toString()}>\n                {capitalize(dimension)}\n              </div>\n              <div className={cl('dimension-stage').toString()}>\n                {asIsStage === toBeStage\n                  ? `${capitalize(asIsStage)}`\n                  : `${capitalize(asIsStage)} → ${capitalize(toBeStage)}`}\n              </div>\n              <div className={cl('dimension-score').toString()}>\n                {scores[dimension]}\n              </div>\n            </div>\n            {clean(data.stages[toBeStage][dimension]['text'])}\n            <ul className={cl('action-list').toString()}>\n              {data.stages[toBeStage][dimension]['actionList'].map(item => (\n                <li key={item} className={cl('action-item').toString()}>\n                  {item}\n                </li>\n              ))}\n            </ul>\n\n            <Scalar\n              answer={(id, answer) =>\n                updateMetaAnswer(setState, state, id, answer)\n              }\n              id={`report-${dimension}-accuracy`}\n              question=\"How accurate is the maturity score for this dimension?\"\n              min=\"The score does not reflect our maturity level at all\"\n              max=\"The score perfectly reflects our maturity level\"\n              currentAnswer={state.meta[`report-${dimension}-accuracy`]}\n              showMeta={state.showMeta}\n            />\n          </div>\n        )\n      })}\n      <div className=\"no-show\">\n        <h2>Finishing up</h2>\n        <Likert\n          answer={(id, answer) => updateMetaAnswer(setState, state, id, answer)}\n          id={'model-purpose'}\n          question=\"The purpose of the Data-Driven Maturity Assessment is clear.\"\n          currentAnswer={state.meta['model-purpose']}\n          showMeta={state.showMeta}\n        />\n        <Likert\n          answer={(id, answer) => updateMetaAnswer(setState, state, id, answer)}\n          id={'model-scope'}\n          question=\"The scope of the Data-Driven Maturity Model and Assessment are clear.\"\n          currentAnswer={state.meta['model-scope']}\n          showMeta={state.showMeta}\n        />\n        <Likert\n          answer={(id, answer) => updateMetaAnswer(setState, state, id, answer)}\n          id={'report-results'}\n          question=\"The results of the Data-Driven Maturity Assessment can help us create a strategic plan for data-driven maturity.\"\n          currentAnswer={state.meta['report-results']}\n          showMeta={state.showMeta}\n        />\n        <Scalar\n          answer={(id, answer) => updateMetaAnswer(setState, state, id, answer)}\n          id={'report-overall-accuracy'}\n          question=\"How accurate is the overall maturity score for your data-driven maturity?\"\n          min=\"The score does not reflect the maturity level at all\"\n          max=\"The score perfectly reflects the maturity level\"\n          currentAnswer={state.meta['report-overall-accuracy']}\n          showMeta={state.showMeta}\n        />\n        <Scalar\n          answer={(id, answer) => updateMetaAnswer(setState, state, id, answer)}\n          id={'report-nps'}\n          question=\"How likely is it that you would recommend this Data-Driven Maturity Assessment within your business network, without the added meta-evaluation (in pink)?\"\n          min=\"Not likely at all\"\n          max=\"Very likely\"\n          currentAnswer={state.meta['report-nps']}\n          showMeta={state.showMeta}\n        />\n\n        <Input\n          description=\"Any additional remarks or suggestions about the model, assessment, or report?\"\n          update={value =>\n            updateMetaAnswer(setState, state, 'report-random', value)\n          }\n          value={state.meta['report-random']}\n          textarea\n          showMeta={state.showMeta}\n        />\n      </div>\n      {!global.submitted && allAnswered(global.showMeta, state.meta) && (\n        <Button\n          block\n          onClick={() =>\n            dispatch({\n              type: 'SUBMIT_ASSESSMENT',\n              payload: { dispatch, meta: state.meta },\n            })\n          }\n        >\n          Submit assessment\n        </Button>\n      )}\n      {!global.submitted && !allAnswered(global.showMeta, state.meta) && (\n        <Button block>Please answer all questions before submitting</Button>\n      )}\n    </div>\n  )\n}\n\nexport default Report\n","import moment from 'moment'\nimport data from 'data'\nimport { uploadAssessment, retrieveAssessment } from 'lib/thunks'\n\nconst initialState = {\n  showMeta: false,\n  answers: {},\n  meta: {\n    start: new Date(),\n    version: '2.0',\n  },\n  submitted: false,\n  date: moment().format('Do of MMMM, YYYY'),\n  dimensions: data.dimensions,\n  questionnaire: data.questionnaire,\n  dimension: false,\n  pushedURL: '',\n}\n\nfunction saveState(state) {\n  window.state = state\n  localStorage.setItem('state', JSON.stringify(state))\n}\n\nfunction loadState(state) {\n  const savedState = JSON.parse(localStorage.getItem('state'))\n  return savedState && Object.keys(savedState).length ? savedState : state\n}\n\nfunction retrievedAssessment(state, { id, assessment }) {\n  return Object.assign({}, state, {\n    meta: assessment.meta,\n    answers: assessment.answers,\n    submitted: id,\n    date: assessment.date,\n  })\n}\n\nfunction submitAssessment(state, { payload }) {\n  const newMeta = Object.assign(\n    {\n      end: new Date(),\n    },\n    state.meta,\n    payload.meta\n  )\n\n  const newState = Object.assign({}, state, {\n    meta: newMeta,\n  })\n\n  uploadAssessment(payload.dispatch, newState)\n\n  return newState\n}\n\nfunction submittedAssessment(state, { payload }) {\n  return Object.assign({}, state, {\n    submitted: payload.submitted,\n    date: payload.date,\n  })\n}\n\nfunction reset(_state, _action) {\n  localStorage.removeItem('state')\n  return initialState\n}\n\nfunction submitAnswers(state, { payload }) {\n  return Object.assign({}, state, {\n    meta: Object.assign({}, state.meta, {\n      [payload.key]: payload.meta,\n    }),\n    answers: Object.assign({}, state.answers, {\n      [payload.key]: payload.answers,\n    }),\n  })\n}\n\nfunction navigate(state, { payload }) {\n  return Object.assign({}, state, {\n    pushedURL: payload.url,\n  })\n}\nfunction pushedURL(state, _event) {\n  return Object.assign({}, state, {\n    pushedURL: false,\n  })\n}\n\nfunction stateMachine(state, action) {\n  console.log(action.type, action.payload)\n\n  switch (action.type) {\n    case 'RESET':\n      return reset(state, action)\n    case 'SUBMIT_ANSWERS':\n      return submitAnswers(state, action)\n    case 'NAVIGATE':\n      return navigate(state, action)\n    case 'PUSHED_URL':\n      return pushedURL(state, action)\n    case 'SUBMIT_ASSESSMENT':\n      return submitAssessment(state, action)\n    case 'SUBMITTED_ASSESSMENT':\n      return submittedAssessment(state, action)\n    case 'RETRIEVE_ASSESSMENT':\n      return retrieveAssessment(state, action.payload)\n    case 'RETRIEVED_ASSESSMENT':\n      return retrievedAssessment(state, action.payload)\n    default:\n      return state\n  }\n}\n\nfunction init(state) {\n  const newState = loadState(state)\n  console.log(newState)\n  window.state = newState\n  return newState\n}\n\nfunction reducer(state, action) {\n  const newState = stateMachine(state, action)\n  saveState(newState)\n  return newState\n}\n\nexport { initialState, reducer, init }\n","import moment from 'moment'\n\nfunction uploadAssessment(dispatch, state) {\n  fetch('https://store.rubenbuitelaar.com', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json, text/plain, */*',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      type: 'assessment',\n      answers: state.answers,\n      meta: state.meta,\n      date: moment().format('Do of MMMM, YYYY'),\n    }),\n  })\n    .then(res => res.json())\n    .then(data => {\n      dispatch({\n        type: 'SUBMITTED_ASSESSMENT',\n        payload: {\n          submitted: data.id,\n          date: moment().format('Do of MMMM, YYYY'),\n        },\n      })\n    })\n}\n\nfunction retrieveAssessment(state, { dispatch, id }) {\n  fetch('https://store.rubenbuitelaar.com', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json, text/plain, */*',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      id,\n    }),\n  })\n    .then(res => res.json())\n    .then(assessment => {\n      dispatch({ type: 'RETRIEVED_ASSESSMENT', payload: { id, assessment } })\n    })\n\n  return state\n}\n\nexport { uploadAssessment, retrieveAssessment }\n","import 'whatwg-fetch'\nimport React, { useReducer, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport bem from 'bem-classes'\nimport 'styles/blocks/assessment.css'\nimport { Route, Redirect } from 'react-router-dom'\n\nimport General from './general'\nimport Dimension from './dimension'\nimport Instructions from './instructions'\nimport Model from './model'\nimport Stages from './stages'\nimport Report from './report'\n\nimport data from 'data'\nimport { reducer, initialState, init } from '../../lib/reducer'\n\nfunction progress() {\n  const url = window.location.pathname\n  if (url.includes('general')) return 5\n  if (url.includes('stages')) return 10\n  if (url.includes('data')) return 15\n  if (url.includes('metrics')) return 22\n  if (url.includes('skills')) return 29\n  if (url.includes('technology')) return 36\n  if (url.includes('leadership')) return 43\n  if (url.includes('culture')) return 50\n  if (url.includes('strategy')) return 57\n  if (url.includes('agility')) return 64\n  if (url.includes('integration')) return 71\n  if (url.includes('empowerment')) return 80\n  if (url.includes('report')) return 100\n  return 2\n}\n\nfunction Assessment(props) {\n  const [state, dispatch] = useReducer(reducer, initialState, init)\n\n  useEffect(() => {\n    const url = new URL(window.location.href)\n    const id = url.searchParams.get('id')\n    if (id) {\n      dispatch({ type: 'RETRIEVE_ASSESSMENT', payload: { dispatch, id } })\n    }\n  }, true)\n\n  // useEffect(() => {\n  //   dispatch({ type: 'load' })\n  //   dispatch({ type: 'save' })\n  // })\n\n  // saveData(data = {}) {\n  //   this.setState({\n  //     answers: Object.assign({}, state.answers, data.answers),\n  //     meta: Object.assign({}, state.meta, data.meta),\n  //   })\n  // }\n\n  // finish(meta = {}) {\n  //   this.setState({\n  //     meta: Object.assign({}, state.meta, meta),\n  //   })\n  // }\n\n  const cl = bem('assessment')\n\n  useEffect(() => {\n    if (!state.pushedURL) return\n\n    props.history.push(state.pushedURL)\n    dispatch({ type: 'PUSHED_URL' })\n  }, [state.pushedURL])\n\n  return (\n    <div className={cl.toString()}>\n      <div\n        className={cl('progress').toString()}\n        style={{ width: `${progress(state)}%` }}\n        onClick={() =>\n          window.confirm('Are you sure you want to reset the assessment?') &&\n          dispatch({ type: 'RESET' })\n        }\n      />\n\n      <Route\n        exact\n        path={`${props.match.url}`}\n        render={props => <Instructions state={state} dispatch={dispatch} />}\n      />\n\n      <Route\n        path={`${props.match.url}/general`}\n        render={props => <General state={state} dispatch={dispatch} />}\n      />\n      <Route\n        path={`${props.match.url}/stages`}\n        render={props => <Stages state={state} dispatch={dispatch} />}\n      />\n      <Route\n        path={`${props.match.url}/dimensions/:dimension`}\n        render={props => (\n          <Dimension\n            state={state}\n            dispatch={dispatch}\n            dimensionKey={props.match.params.dimension}\n          />\n        )}\n      />\n      <Route\n        path={`${props.match.url}/report`}\n        render={props => <Report global={state} dispatch={dispatch} />}\n      />\n    </div>\n  )\n}\n\nexport default Assessment\n","import React from 'react'\nimport bem from 'bem-classes'\nimport { push } from 'react-router-redux'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport 'styles/blocks/introduction.css'\n\nimport data from 'data'\nimport { Model, Button } from 'components'\nimport { withRouter } from 'react-router-dom'\n\nconst Introduction = props => {\n  const intro = bem('introduction')\n\n  const stages = [\n    {\n      name: 'Reporting',\n      content:\n        'Visualize existing data and create the foundation for an analytical future.',\n    },\n    {\n      name: 'Analyzing',\n      content:\n        'Dive deeper into the data to achieve insight into why things happened.',\n    },\n    {\n      name: 'Optimizing',\n      content:\n        'Optimize business processes by bringing analytical insight to operations.',\n    },\n    {\n      name: 'Empowering',\n      content:\n        'Empower employees by providing the tools and knowledge to perform analytical activities.',\n    },\n    {\n      name: 'Innovating',\n      content:\n        'Use data and experiments to innovate in products and transform the organization.',\n    },\n  ]\n\n  const dimensions = [\n    {\n      name: 'Data',\n      content:\n        'The fuel for all data-driven activities. How do you source and manage your data?',\n    },\n    {\n      name: 'Metrics',\n      content:\n        \"The key to measuring output and managing performance. How do you use, collect, and enrich your KPI's?\",\n    },\n    {\n      name: 'Skills',\n      content:\n        'Essential for operating a data-driven organization. Do you hire and educate the right people?',\n    },\n    {\n      name: 'Technology',\n      content:\n        'The foundation for a data-driven organization. What technology do you need to build an analytical process?',\n    },\n    {\n      name: 'Leadership',\n      content:\n        'The cornerstone for a successful analytical transformation. How does leadership successfully steer the transformation?',\n    },\n    {\n      name: 'Culture',\n      content:\n        'The driving force behind a data-driven organization. How does culture affect and promote data-driven adoption?',\n    },\n    {\n      name: 'Strategy',\n      content:\n        'The plan for success. What role does analytics have in your plans and vision of the future?',\n    },\n    {\n      name: 'Agility',\n      content:\n        'The ability to adapt and succeed. How well are your roles and processes organized to change and deliver?',\n    },\n    {\n      name: 'Integration',\n      content:\n        'The integration of analytical insight into processes. How is the organization using analytical output and how are operational processes using real-time intelligence?',\n    },\n    {\n      name: 'Empowerment',\n      content:\n        'The empowerment of the organization. How is data analytics helping your employees to succeed?',\n    },\n  ]\n\n  return (\n    <div className={intro.toString()}>\n      <div className=\"alert alert--green\">\n        Bring your organization to the next level. <br />\n        Take the free data-driven maturity scan and discover the best path for\n        your organization.\n      </div>\n\n      <div className={intro('usps').toString()}>\n        <div className={intro('usp').toString()}>\n          <span className={intro('usp-title').toString()}>Insightful</span>\n          <span className={intro('usp-text').toString()}>\n            Generates a personalized report with executive summary\n          </span>\n        </div>\n\n        <div className={intro('usp').toString()}>\n          <span className={intro('usp-title').toString()}>Fast</span>\n          <span className={intro('usp-text').toString()}>\n            The maturity assessment takes less than 30 minutes\n          </span>\n        </div>\n        <div className={intro('usp').toString()}>\n          <span className={intro('usp-title').toString()}>Free</span>\n          <span className={intro('usp-text').toString()}>\n            For a limited time the assessment is free to use\n          </span>\n        </div>\n      </div>\n\n      <Button onClick={() => props.history.push('/assessment')}>\n        Start the Data-Driven Maturity Assessment\n      </Button>\n\n      <div className=\"introduction__copy\">\n        <h2 className=\"h2--margin\">Bridge the gap in analytics</h2>\n        <p>\n          Many organizations fail to take full advantage of analytics and\n          struggle to become a data-driven company. They may grasp the basics of\n          business intelligence but are not turning analytical competence into a\n          competitive advantage.\n        </p>\n        <p>\n          Based on modern research, this comprehensive maturity model provides a\n          360-view on the data-driven capabilities of your organization. The\n          maturity assessment takes both organizational and technical\n          capabilities into account. Valuable insight is provided in a\n          personalized executive summary.\n        </p>\n      </div>\n\n      <h2 className=\"h2--margin\">The Data-Driven Maturity Model</h2>\n      <Model />\n      <div className={intro('intro').toString()}>{data.model.introduction}</div>\n\n      <div className={intro('title').toString()}>\n        <h2>5 Stages</h2>\n      </div>\n\n      {stages.map(stage => (\n        <div className={intro('stage').toString()} key={stage.name}>\n          <h3\n            className={intro(\n              'stage-header',\n              `introduction__stage-header--${stage.name.toLowerCase()}`\n            ).toString()}\n          >\n            {stage.name}\n          </h3>\n          <div\n            className={intro(\n              'stage-content',\n              `introduction__stage-content--${stage.name.toLowerCase()}`\n            ).toString()}\n          >\n            {stage.content}\n          </div>\n        </div>\n      ))}\n\n      <div className={intro('title').toString()}>\n        <h2>10 Dimensions</h2>\n      </div>\n\n      <div className={intro('dimensions').toString()}>\n        {dimensions.map(dimension => (\n          <div className={intro('dimension').toString()} key={dimension.name}>\n            <h3\n              className={intro(\n                'dimension-header',\n                `introduction__dimension-header--${dimension.name.toLowerCase()}`\n              ).toString()}\n            >\n              {dimension.name}\n            </h3>\n            <div\n              className={intro(\n                'dimension-content',\n                `introduction__dimension-content--${dimension.name.toLowerCase()}`\n              ).toString()}\n            >\n              {dimension.content}\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <h2 className=\"h2--margin\">Modern Research</h2>\n      <p>\n        The Data-Driven Maturity Model & Assessment have been developed by{' '}\n        <a\n          href=\"https://www.linkedin.com/in/ruben-buitelaar-a67b2b105/\"\n          target=\"_blank\"\n        >\n          Ruben Buitelaar\n        </a>{' '}\n        at Leiden University as part of the master's degree in ICT in Business.\n        The research involved careful meta-analysis of existing maturity models\n        and review of existing best-practices. The full master's thesis can be\n        found{' '}\n        <a\n          href=\"https://theses.liacs.nl/pdf/2017-2018-BuitelaarRuben.pdf\"\n          target=\"_blank\"\n        >\n          here\n        </a>\n        .\n      </p>\n\n      <Button onClick={() => props.history.push('/assessment')}>\n        Start the Data-Driven Maturity Assessment\n      </Button>\n    </div>\n  )\n}\n\nexport default withRouter(Introduction)\n","import React from 'react'\nimport bem from 'bem-classes'\nimport { push } from 'react-router-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport 'styles/blocks/header.css'\n\nconst Header = props => {\n  const header = bem('header')\n\n  return (\n    <header className={header('', 'no-print').toString()}>\n      <h1\n        className={header('title').toString()}\n        onClick={() => props.history.push('/')}\n      >\n        Data-Driven Maturity Model & Assessment\n      </h1>\n    </header>\n  )\n}\n\nexport default withRouter(Header)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport bem from 'bem-classes'\n\nimport Assessment from 'containers/assessment'\nimport Introduction from 'containers/introduction'\nimport 'styles/blocks/app.css'\nimport 'styles/blocks/alert.css'\n\nimport Header from './header'\n\nconst App = () => {\n  const app = bem('app')\n\n  console.log(app.toString())\n\n  return (\n    <div className={app.toString()}>\n      <Header />\n\n      <main className={app('main').toString()}>\n        <Route exact path=\"/\" component={Introduction} />\n        <Route path=\"/assessment\" component={Assessment} />\n      </main>\n\n      <footer className={app('footer', 'no-print').toString()}>\n        <div>Contact: rubenbuitelaar@gmail.com</div>\n      </footer>\n    </div>\n  )\n}\n\nexport default App\n","import 'core-js/shim'\nimport 'url-polyfill'\nimport React from 'react'\nimport { render } from 'react-dom'\nimport registerServiceWorker from 'vendor/registerServiceWorker'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from 'containers/app'\nimport 'styles/base.css'\n\nconst target = document.querySelector('#root')\n\nrender(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  target\n)\n\nif (module.hot) {\n  module.hot.accept('containers/app', () => {\n    import('containers/app').then(module => {\n      const NextApp = module.default\n\n      render(\n        <BrowserRouter>\n          <NextApp />\n        </BrowserRouter>,\n        target\n      )\n    })\n  })\n}\n"],"sourceRoot":""}